Tue 06 Sep 2022 01:34:38 AM UTC: 
 tests:  0|6
total_score: 0/70
5a539a6
Fri 09 Sep 2022 02:21:17 AM UTC: 
 hashmap.c | 7 +++++--
 1 file changed, 5 insertions(+), 2 deletions(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:56:5: error: ‘buck’ undeclared (first use in this function)
   56 |     buck=hash->buckets;
      |     ^~~~
hashmap.c:56:5: note: each undeclared identifier is reported only once for each function it appears in
hashmap.c:57:11: error: ‘buckets’ undeclared (first use in this function)
   57 |     buck=(buckets*) calloc (1,sizeof(buckets));
      |           ^~~~~~~
hashmap.c:57:19: error: expected expression before ‘)’ token
   57 |     buck=(buckets*) calloc (1,sizeof(buckets));
      |                   ^
Compilation failed
3e544ae
Fri 09 Sep 2022 02:24:08 AM UTC: 
 hashmap.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:56:20: error: ‘buckets’ undeclared (first use in this function)
   56 |     hash->buckets=(buckets*) calloc (1,sizeof(buckets));
      |                    ^~~~~~~
hashmap.c:56:20: note: each undeclared identifier is reported only once for each function it appears in
hashmap.c:56:28: error: expected expression before ‘)’ token
   56 |     hash->buckets=(buckets*) calloc (1,sizeof(buckets));
      |                            ^
Compilation failed
71c82aa
Fri 09 Sep 2022 02:24:31 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:56:20: error: ‘hashMap’ undeclared (first use in this function); did you mean ‘HashMap’?
   56 |     hash->buckets=(hashMap*) calloc (1,sizeof(hashMap));
      |                    ^~~~~~~
      |                    HashMap
hashmap.c:56:20: note: each undeclared identifier is reported only once for each function it appears in
hashmap.c:56:28: error: expected expression before ‘)’ token
   56 |     hash->buckets=(hashMap*) calloc (1,sizeof(hashMap));
      |                            ^
Compilation failed
0603998
Fri 09 Sep 2022 02:24:50 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:56:18: error: assignment to ‘Pair **’ from incompatible pointer type ‘HashMap *’ {aka ‘struct HashMap *’} [-Werror=incompatible-pointer-types]
   56 |     hash->buckets=(HashMap*) calloc (1,sizeof(HashMap));
      |                  ^
hashmap.c:56:18: error: ‘hash’ is used uninitialized in this function [-Werror=uninitialized]
   56 |     hash->buckets=(HashMap*) calloc (1,sizeof(HashMap));
      |     ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cc1: all warnings being treated as errors
Compilation failed
0c42e0d
Fri 09 Sep 2022 02:24:59 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:56:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   56 |     hash->buckets=(HashMap*) calloc (1,sizeof(HashMap));
      |         ^~
      |         ->
hashmap.c:57:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   57 |     hash->current=-1;
      |         ^~
      |         ->
hashmap.c:58:12: error: returning ‘HashMap **’ {aka ‘struct HashMap **’} from a function with incompatible return type ‘HashMap *’ {aka ‘struct HashMap *’} [-Werror=incompatible-pointer-types]
   58 |     return hash;
      |            ^~~~
cc1: all warnings being treated as errors
Compilation failed
eb66568
Fri 09 Sep 2022 02:49:55 AM UTC: 
 hashmap.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:55:20: error: initialization of ‘HashMap **’ {aka ‘struct HashMap **’} from incompatible pointer type ‘HashMap *’ {aka ‘struct HashMap *’} [-Werror=incompatible-pointer-types]
   55 |     HashMap **hash=(HashMap*) calloc (1,sizeof(HashMap));
      |                    ^
hashmap.c:56:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   56 |     hash->current=-1;
      |         ^~
      |         ->
hashmap.c:57:12: error: returning ‘HashMap **’ {aka ‘struct HashMap **’} from a function with incompatible return type ‘HashMap *’ {aka ‘struct HashMap *’} [-Werror=incompatible-pointer-types]
   57 |     return hash;
      |            ^~~~
cc1: all warnings being treated as errors
Compilation failed
4f5ff54
Fri 09 Sep 2022 02:50:10 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:56:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   56 |     hash->current=-1;
      |         ^~
      |         ->
hashmap.c:57:12: error: returning ‘HashMap **’ {aka ‘struct HashMap **’} from a function with incompatible return type ‘HashMap *’ {aka ‘struct HashMap *’} [-Werror=incompatible-pointer-types]
   57 |     return hash;
      |            ^~~~
cc1: all warnings being treated as errors
Compilation failed
4f40f9e
Fri 09 Sep 2022 02:50:54 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:56:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   56 |     hash->current=-1;
      |         ^~
      |         ->
Compilation failed
05b07b8
Fri 09 Sep 2022 02:51:05 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:56:10: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   56 |     *hash->current=-1;
      |          ^~
      |          ->
Compilation failed
bd63d8a
Fri 09 Sep 2022 02:51:16 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:56:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   56 |     hash->current=-1;
      |         ^~
      |         ->
Compilation failed
69fdc4c
Fri 09 Sep 2022 02:51:59 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:55:20: error: initialization of ‘HashMap **’ {aka ‘struct HashMap **’} from incompatible pointer type ‘HashMap *’ {aka ‘struct HashMap *’} [-Werror=incompatible-pointer-types]
   55 |     HashMap **hash=(HashMap*) calloc (1,sizeof(HashMap));
      |                    ^
hashmap.c:56:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   56 |     hash->current=-1;
      |         ^~
      |         ->
cc1: all warnings being treated as errors
Compilation failed
fb40692
Fri 09 Sep 2022 02:52:05 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:56:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   56 |     hash->current=-1;
      |         ^~
      |         ->
Compilation failed
fdb57ca
Fri 09 Sep 2022 02:52:16 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:56:11: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   56 |     **hash->current=-1;
      |           ^~
      |           ->
Compilation failed
6c5ecff
Fri 09 Sep 2022 02:54:30 AM UTC: 
 hashmap.c | 4 +++-
 1 file changed, 3 insertions(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:56:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   56 |     hash->size=NULL:
      |         ^~
      |         ->
hashmap.c:56:20: error: expected ‘;’ before ‘:’ token
   56 |     hash->size=NULL:
      |                    ^
hashmap.c:58:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   58 |     hash->current=-1;
      |         ^~
      |         ->
Compilation failed
fdca48c
Fri 09 Sep 2022 02:54:38 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:56:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   56 |     hash->size=NULL;
      |         ^~
      |         ->
hashmap.c:57:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   57 |     hash->capacity=NULL;
      |         ^~
      |         ->
hashmap.c:58:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   58 |     hash->current=-1;
      |         ^~
      |         ->
Compilation failed
8a39c2d
Fri 09 Sep 2022 02:54:44 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:56:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   56 |     hash->size=NULL;
      |         ^~
      |         ->
hashmap.c:57:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   57 |     hash->capacity=NULL;
      |         ^~
      |         ->
hashmap.c:58:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   58 |     hash->current=-1;
      |         ^~
      |         ->
hashmap.c:59:12: error: returning ‘HashMap **’ {aka ‘struct HashMap **’} from a function with incompatible return type ‘HashMap *’ {aka ‘struct HashMap *’} [-Werror=incompatible-pointer-types]
   59 |     return hash;
      |            ^~~~
cc1: all warnings being treated as errors
Compilation failed
2dcf34a
Fri 09 Sep 2022 02:54:54 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:55:19: error: initialization of ‘HashMap *’ {aka ‘struct HashMap *’} from incompatible pointer type ‘HashMap **’ {aka ‘struct HashMap **’} [-Werror=incompatible-pointer-types]
   55 |     HashMap *hash=(HashMap**) calloc (1,sizeof(HashMap));
      |                   ^
hashmap.c:56:15: error: assignment to ‘long int’ from ‘void *’ makes integer from pointer without a cast [-Werror=int-conversion]
   56 |     hash->size=NULL;
      |               ^
hashmap.c:57:19: error: assignment to ‘long int’ from ‘void *’ makes integer from pointer without a cast [-Werror=int-conversion]
   57 |     hash->capacity=NULL;
      |                   ^
cc1: all warnings being treated as errors
Compilation failed
245c8c7
Fri 09 Sep 2022 02:55:02 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:56:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   56 |     hash->size=NULL;
      |         ^~
      |         ->
hashmap.c:57:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   57 |     hash->capacity=NULL;
      |         ^~
      |         ->
hashmap.c:58:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   58 |     hash->current=-1;
      |         ^~
      |         ->
hashmap.c:59:12: error: returning ‘HashMap **’ {aka ‘struct HashMap **’} from a function with incompatible return type ‘HashMap *’ {aka ‘struct HashMap *’} [-Werror=incompatible-pointer-types]
   59 |     return hash;
      |            ^~~~
cc1: all warnings being treated as errors
Compilation failed
eae2f72
Fri 09 Sep 2022 02:56:03 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:56:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   56 |     hash->size=NULL;
      |         ^~
      |         ->
hashmap.c:57:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   57 |     hash->capacity=capacity;
      |         ^~
      |         ->
hashmap.c:58:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   58 |     hash->current=-1;
      |         ^~
      |         ->
hashmap.c:59:12: error: returning ‘HashMap **’ {aka ‘struct HashMap **’} from a function with incompatible return type ‘HashMap *’ {aka ‘struct HashMap *’} [-Werror=incompatible-pointer-types]
   59 |     return hash;
      |            ^~~~
cc1: all warnings being treated as errors
Compilation failed
406a9df
Fri 09 Sep 2022 02:56:21 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:55:20: error: initialization of ‘HashMap **’ {aka ‘struct HashMap **’} from incompatible pointer type ‘HashMap *’ {aka ‘struct HashMap *’} [-Werror=incompatible-pointer-types]
   55 |     HashMap **hash=(HashMap*) calloc (1,sizeof(HashMap));
      |                    ^
hashmap.c:56:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   56 |     hash->size=NULL;
      |         ^~
      |         ->
hashmap.c:57:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   57 |     hash->capacity=capacity;
      |         ^~
      |         ->
hashmap.c:58:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   58 |     hash->current=-1;
      |         ^~
      |         ->
hashmap.c:59:12: error: returning ‘HashMap **’ {aka ‘struct HashMap **’} from a function with incompatible return type ‘HashMap *’ {aka ‘struct HashMap *’} [-Werror=incompatible-pointer-types]
   59 |     return hash;
      |            ^~~~
cc1: all warnings being treated as errors
Compilation failed
07d9fa9
Fri 09 Sep 2022 02:56:58 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:56:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   56 |     hash->size=NULL;
      |         ^~
      |         ->
hashmap.c:57:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   57 |     hash->capacity=capacity;
      |         ^~
      |         ->
hashmap.c:58:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   58 |     hash->current=-1;
      |         ^~
      |         ->
hashmap.c:59:12: error: returning ‘HashMap **’ {aka ‘struct HashMap **’} from a function with incompatible return type ‘HashMap *’ {aka ‘struct HashMap *’} [-Werror=incompatible-pointer-types]
   59 |     return hash;
      |            ^~~~
cc1: all warnings being treated as errors
Compilation failed
58f2be2
Fri 09 Sep 2022 02:57:27 AM UTC: 
 hashmap.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:56:10: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   56 |     *hash->size=NULL;
      |          ^~
      |          ->
hashmap.c:57:10: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   57 |     *hash->capacity=capacity;
      |          ^~
      |          ->
hashmap.c:58:10: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   58 |     *hash->current=-1;
      |          ^~
      |          ->
hashmap.c:59:12: error: returning ‘HashMap **’ {aka ‘struct HashMap **’} from a function with incompatible return type ‘HashMap *’ {aka ‘struct HashMap *’} [-Werror=incompatible-pointer-types]
   59 |     return hash;
      |            ^~~~
cc1: all warnings being treated as errors
Compilation failed
38537b1
Fri 09 Sep 2022 02:57:38 AM UTC: 
 hashmap.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:56:11: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   56 |     **hash->size=NULL;
      |           ^~
      |           ->
hashmap.c:57:11: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   57 |     **hash->capacity=capacity;
      |           ^~
      |           ->
hashmap.c:58:11: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   58 |     **hash->current=-1;
      |           ^~
      |           ->
hashmap.c:59:12: error: returning ‘HashMap **’ {aka ‘struct HashMap **’} from a function with incompatible return type ‘HashMap *’ {aka ‘struct HashMap *’} [-Werror=incompatible-pointer-types]
   59 |     return hash;
      |            ^~~~
cc1: all warnings being treated as errors
Compilation failed
63e4d68
Fri 09 Sep 2022 02:58:19 AM UTC: 
 hashmap.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:56:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   56 |     hash->size=NULL;
      |         ^~
      |         ->
hashmap.c:57:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   57 |     hash->capacity=capacity;
      |         ^~
      |         ->
hashmap.c:58:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   58 |     hash->current=-1;
      |         ^~
      |         ->
Compilation failed
4d9bf4c
Fri 09 Sep 2022 02:58:34 AM UTC: 
 hashmap.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:56:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   56 |     hash->size=NULL;
      |         ^~
      |         ->
hashmap.c:57:11: error: expected identifier before ‘->’ token
   57 |     hash->->capacity=capacity;
      |           ^~
hashmap.c:58:11: error: expected identifier before ‘->’ token
   58 |     hash->->current=-1;
      |           ^~
Compilation failed
211b85b
Fri 09 Sep 2022 03:00:40 AM UTC: 
 hashmap.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:56:18: error: assignment to ‘long int’ from ‘void *’ makes integer from pointer without a cast [-Werror=int-conversion]
   56 |     (*hash)->size=NULL;
      |                  ^
cc1: all warnings being treated as errors
Compilation failed
9d82e3c
Fri 09 Sep 2022 03:01:57 AM UTC: 
 hashmap.c | 3 +--
 1 file changed, 1 insertion(+), 2 deletions(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:56:22: error: lvalue required as left operand of assignment
   56 |     (*hash)->capacity=capacity;
      |                      ^
Compilation failed
854aeae
Fri 09 Sep 2022 03:02:17 AM UTC: 
 hashmap.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:56:18: error: assignment to ‘long int’ from ‘void *’ makes integer from pointer without a cast [-Werror=int-conversion]
   56 |     (*hash)->size=NULL;
      |                  ^
cc1: all warnings being treated as errors
Compilation failed
e6f2398
Fri 09 Sep 2022 03:04:27 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  0|6
total_score: 0/70
b293504
Fri 09 Sep 2022 03:07:35 AM UTC: 
 hashmap.c | 1 +
 1 file changed, 1 insertion(+)
 tests:  0|6
total_score: 0/70
e2f9590
Fri 09 Sep 2022 03:07:46 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:60:12: error: returning ‘HashMap **’ {aka ‘struct HashMap **’} from a function with incompatible return type ‘HashMap *’ {aka ‘struct HashMap *’} [-Werror=incompatible-pointer-types]
   60 |     return hash;
      |            ^~~~
cc1: all warnings being treated as errors
Compilation failed
edf12a4
Fri 09 Sep 2022 03:07:53 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  0|6
total_score: 0/70
4117484
Fri 09 Sep 2022 03:08:03 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:57:18: error: assignment to ‘long int’ from ‘void *’ makes integer from pointer without a cast [-Werror=int-conversion]
   57 |     (*hash)->size=NULL;
      |                  ^
cc1: all warnings being treated as errors
Compilation failed
28dfce0
Fri 09 Sep 2022 03:09:47 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  0|6
total_score: 0/70
6c5957e
Fri 09 Sep 2022 03:11:21 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  0|6
total_score: 0/70
f424118
Fri 09 Sep 2022 03:11:53 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:56:13: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   56 |     (**hash)->buckets=NULL;
      |             ^~
Compilation failed
3957898
Fri 09 Sep 2022 03:12:02 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:56:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   56 |     hash->buckets=NULL;
      |         ^~
      |         ->
Compilation failed
5b12262
Fri 09 Sep 2022 03:12:08 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  0|6
total_score: 0/70
cb7096f
Fri 09 Sep 2022 03:13:20 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:57:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   57 |     hash->size=0;
      |         ^~
      |         ->
Compilation failed
666199d
Fri 09 Sep 2022 03:13:32 AM UTC: 
 hashmap.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:60:12: error: returning ‘HashMap **’ {aka ‘struct HashMap **’} from a function with incompatible return type ‘HashMap *’ {aka ‘struct HashMap *’} [-Werror=incompatible-pointer-types]
   60 |     return hash;
      |            ^~~~
cc1: all warnings being treated as errors
Compilation failed
990dd52
Fri 09 Sep 2022 03:13:42 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  0|6
total_score: 0/70
5890f8b
Fri 09 Sep 2022 03:16:58 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:55:19: error: initialization of ‘HashMap *’ {aka ‘struct HashMap *’} from incompatible pointer type ‘HashMap **’ {aka ‘struct HashMap **’} [-Werror=incompatible-pointer-types]
   55 |     HashMap *hash=(HashMap**)malloc(sizeof(HashMap));
      |                   ^
hashmap.c:56:12: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   56 |     (*hash)->buckets=NULL;
      |            ^~
hashmap.c:57:12: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   57 |     (*hash)->size=0;
      |            ^~
hashmap.c:58:12: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   58 |     (*hash)->capacity=capacity;
      |            ^~
hashmap.c:59:12: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   59 |     (*hash)->current=-1;
      |            ^~
hashmap.c:60:12: error: incompatible types when returning type ‘HashMap’ {aka ‘struct HashMap’} but ‘HashMap *’ {aka ‘struct HashMap *’} was expected
   60 |     return *hash;
      |            ^~~~~
hashmap.c:61:1: error: control reaches end of non-void function [-Werror=return-type]
   61 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
b629a59
Fri 09 Sep 2022 03:17:25 AM UTC: 
 hashmap.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:55:19: error: initialization of ‘HashMap *’ {aka ‘struct HashMap *’} from incompatible pointer type ‘HashMap **’ {aka ‘struct HashMap **’} [-Werror=incompatible-pointer-types]
   55 |     HashMap *hash=(HashMap**)malloc(sizeof(HashMap));
      |                   ^
cc1: all warnings being treated as errors
Compilation failed
5248cbf
Fri 09 Sep 2022 03:17:35 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  0|0
1eae442
Fri 09 Sep 2022 03:17:54 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:55:19: error: initialization of ‘HashMap *’ {aka ‘struct HashMap *’} from incompatible pointer type ‘HashMap **’ {aka ‘struct HashMap **’} [-Werror=incompatible-pointer-types]
   55 |     HashMap *hash=(HashMap**)malloc(sizeof(HashMap));
      |                   ^
cc1: all warnings being treated as errors
Compilation failed
635a734
Fri 09 Sep 2022 03:18:59 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:55:20: error: initialization of ‘HashMap **’ {aka ‘struct HashMap **’} from incompatible pointer type ‘HashMap *’ {aka ‘struct HashMap *’} [-Werror=incompatible-pointer-types]
   55 |     HashMap **hash=(HashMap*)malloc(sizeof(HashMap));
      |                    ^
hashmap.c:56:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   56 |     hash->buckets=NULL;
      |         ^~
      |         ->
hashmap.c:57:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   57 |     hash->size=0;
      |         ^~
      |         ->
hashmap.c:58:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   58 |     hash->capacity=capacity;
      |         ^~
      |         ->
hashmap.c:59:9: error: ‘*hash’ is a pointer; did you mean to use ‘->’?
   59 |     hash->current=-1;
      |         ^~
      |         ->
hashmap.c:60:12: error: returning ‘HashMap **’ {aka ‘struct HashMap **’} from a function with incompatible return type ‘HashMap *’ {aka ‘struct HashMap *’} [-Werror=incompatible-pointer-types]
   60 |     return hash;
      |            ^~~~
cc1: all warnings being treated as errors
Compilation failed
2fa348c
Fri 09 Sep 2022 03:19:31 AM UTC: 
 hashmap.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:55:20: error: initialization of ‘HashMap **’ {aka ‘struct HashMap **’} from incompatible pointer type ‘HashMap *’ {aka ‘struct HashMap *’} [-Werror=incompatible-pointer-types]
   55 |     HashMap **hash=(HashMap*)malloc(sizeof(HashMap));
      |                    ^
hashmap.c:60:12: error: returning ‘HashMap **’ {aka ‘struct HashMap **’} from a function with incompatible return type ‘HashMap *’ {aka ‘struct HashMap *’} [-Werror=incompatible-pointer-types]
   60 |     return hash;
      |            ^~~~
cc1: all warnings being treated as errors
Compilation failed
9bde4d9
Fri 09 Sep 2022 03:19:49 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:55:20: error: initialization of ‘HashMap **’ {aka ‘struct HashMap **’} from incompatible pointer type ‘HashMap *’ {aka ‘struct HashMap *’} [-Werror=incompatible-pointer-types]
   55 |     HashMap **hash=(HashMap*)malloc(sizeof(HashMap));
      |                    ^
cc1: all warnings being treated as errors
Compilation failed
9424d07
Fri 09 Sep 2022 03:19:57 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  0|6
total_score: 0/70
01ad75a
Fri 09 Sep 2022 03:23:30 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:56:12: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   56 |     (*hash)->buckets=NULL;
      |            ^~
hashmap.c:57:12: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   57 |     (*hash)->size=0;
      |            ^~
hashmap.c:58:12: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   58 |     (*hash)->capacity=capacity;
      |            ^~
hashmap.c:59:12: error: invalid type argument of ‘->’ (have ‘HashMap’ {aka ‘struct HashMap’})
   59 |     (*hash)->current=-1;
      |            ^~
hashmap.c:60:12: error: incompatible types when returning type ‘HashMap’ {aka ‘struct HashMap’} but ‘HashMap *’ {aka ‘struct HashMap *’} was expected
   60 |     return *hash;
      |            ^~~~~
hashmap.c:61:1: error: control reaches end of non-void function [-Werror=return-type]
   61 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
b84cfc9
Fri 09 Sep 2022 03:23:42 AM UTC: 
 hashmap.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)
In file included from test.c:4:
hashmap.c: In function ‘createMap’:
hashmap.c:60:12: error: incompatible types when returning type ‘HashMap’ {aka ‘struct HashMap’} but ‘HashMap *’ {aka ‘struct HashMap *’} was expected
   60 |     return *hash;
      |            ^~~~~
hashmap.c:61:1: error: control reaches end of non-void function [-Werror=return-type]
   61 | }
      | ^
cc1: all warnings being treated as errors
Compilation failed
72bc329
Fri 09 Sep 2022 03:23:48 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  0|0
3028181
Fri 09 Sep 2022 03:24:33 AM UTC: 
 hashmap.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)
 tests:  0|0
6b8c6d5
Fri 09 Sep 2022 03:31:29 AM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  0|0
2476ebf
Fri 09 Sep 2022 03:34:20 AM UTC: 
 hashmap.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
 tests:  1|5
total_score: 10/70
a8db2c8
Fri 09 Sep 2022 12:40:37 PM UTC: 
 hashmap.c | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)
In file included from test.c:4:
hashmap.c: In function ‘insertMap’:
hashmap.c:44:5: error: ‘cap’ undeclared (first use in this function); did you mean ‘map’?
   44 |     cap=hash->capacity;
      |     ^~~
      |     map
hashmap.c:44:5: note: each undeclared identifier is reported only once for each function it appears in
hashmap.c:45:5: error: ‘array’ undeclared (first use in this function)
   45 |     array=hash->buckets;
      |     ^~~~~
hashmap.c:46:5: error: ‘pos’ undeclared (first use in this function); did you mean ‘pow’?
   46 |     pos=hash(key,cap){
      |     ^~~
      |     pow
hashmap.c:46:9: error: called object ‘hash’ is not a function or function pointer
   46 |     pos=hash(key,cap){
      |         ^~~~
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
hashmap.c:46:22: error: expected ‘;’ before ‘{’ token
   46 |     pos=hash(key,cap){
      |                      ^
      |                      ;
test.c: In function ‘initializeMap’:
test.c:51:17: error: ‘msg’ undeclared (first use in this function)
   51 |         sprintf(msg, "value%d",i);
      |                 ^~~
test.c:53:20: error: implicit declaration of function ‘_strdup’; did you mean ‘strdup’? [-Werror=implicit-function-declaration]
   53 |         createPair(_strdup(words[i]),_strdup(msg));
      |                    ^~~~~~~
      |                    strdup
test.c:53:20: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
   53 |         createPair(_strdup(words[i]),_strdup(msg));
      |                    ^~~~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c: In function ‘hash_test1’:
test.c:101:14: error: called object ‘hash’ is not a function or function pointer
  101 |     long pos=hash("computador",10);
      |              ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:104:9: error: called object ‘hash’ is not a function or function pointer
  104 |     pos=hash("silla",50);
      |         ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:107:9: error: called object ‘hash’ is not a function or function pointer
  107 |     pos=hash("mesa",5);
      |         ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c: In function ‘hash_test2’:
test.c:118:17: error: called object ‘hash’ is not a function or function pointer
  118 |         int p = hash(words[i],10);
      |                 ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c: In function ‘hash_test3’:
test.c:126:8: error: called object ‘hash’ is not a function or function pointer
  126 |     if(hash(_strdup("hola"),10)!=hash(_strdup("hola"),10)) printf("error: valor diferente para misma clave!\n");
      |        ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:126:34: error: called object ‘hash’ is not a function or function pointer
  126 |     if(hash(_strdup("hola"),10)!=hash(_strdup("hola"),10)) printf("error: valor diferente para misma clave!\n");
      |                                  ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:127:8: error: called object ‘hash’ is not a function or function pointer
  127 |     if(hash(_strdup("chao"),10)!=hash(_strdup("chao"),10)) printf("error: valor diferente para misma clave!\n");
      |        ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:127:34: error: called object ‘hash’ is not a function or function pointer
  127 |     if(hash(_strdup("chao"),10)!=hash(_strdup("chao"),10)) printf("error: valor diferente para misma clave!\n");
      |                                  ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:128:8: error: called object ‘hash’ is not a function or function pointer
  128 |     if(hash(_strdup("casa"),10)!=hash(_strdup("casa"),10)) printf("error: valor diferente para misma clave!\n");
      |        ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:128:34: error: called object ‘hash’ is not a function or function pointer
  128 |     if(hash(_strdup("casa"),10)!=hash(_strdup("casa"),10)) printf("error: valor diferente para misma clave!\n");
      |                                  ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c: In function ‘insert_test1’:
test.c:141:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  141 |     insertMap(map, _strdup(":key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:141:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  141 |     insertMap(map, _strdup(":key"),_strdup("value"));
      |                                    ^~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test2’:
test.c:171:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  171 |     insertMap(map, _strdup("case"),_strdup("repetido"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:171:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  171 |     insertMap(map, _strdup("case"),_strdup("repetido"));
      |                                    ^~~~~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test3’:
test.c:182:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:182:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test4’:
test.c:195:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  195 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:195:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  195 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c:205:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  205 |     insertMap(map, _strdup("holi"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:205:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  205 |     insertMap(map, _strdup("holi"),_strdup("value"));
      |                                    ^~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test5’:
test.c:222:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  222 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:222:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  222 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘search_test2’:
test.c:259:32: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  259 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                ^~~~~~~~~~~~~~
      |                                |
      |                                int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c:259:47: error: passing argument 2 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  259 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                               ^~~~~~~~~~~~~~~~
      |                                               |
      |                                               int
In file included from test.c:4:
hashmap.c:19:40: note: expected ‘void *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                                 ~~~~~~~^~~~~
test.c: In function ‘search_test3’:
test.c:280:17: error: ‘msg’ undeclared (first use in this function)
  280 |         sprintf(msg,"searchMap retorna un elemento con clave %s", map->buckets[map->current]->key);
      |                 ^~~
test.c: In function ‘erase_test2’:
test.c:317:32: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  317 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                ^~~~~~~~~~~~~~
      |                                |
      |                                int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c:317:47: error: passing argument 2 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  317 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                               ^~~~~~~~~~~~~~~~
      |                                               |
      |                                               int
In file included from test.c:4:
hashmap.c:19:40: note: expected ‘void *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                                 ~~~~~~~^~~~~
test.c: In function ‘enlarge_test’:
test.c:436:17: error: ‘msg’ undeclared (first use in this function)
  436 |         sprintf(msg,"enlarged table is:\n");
      |                 ^~~
test.c: In function ‘insertMap’:
test.c:453:5: error: ‘main’ is normally a non-static function [-Werror=main]
  453 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:511:1: error: expected declaration or statement at end of input
  511 | }
      | ^
At top level:
test.c:453:5: error: ‘main’ defined but not used [-Werror=unused-function]
  453 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:217:5: error: ‘insert_test5’ defined but not used [-Werror=unused-function]
  217 | int insert_test5(){ //factor de carga>0.7, se llama a función enlarge
      |     ^~~~~~~~~~~~
test.c:131:6: error: ‘compare_test’ defined but not used [-Werror=unused-function]
  131 | void compare_test(){
      |      ^~~~~~~~~~~~
test.c:125:6: error: ‘hash_test3’ defined but not used [-Werror=unused-function]
  125 | void hash_test3(){ //no random
      |      ^~~~~~~~~~
test.c:111:6: error: ‘hash_test2’ defined but not used [-Werror=unused-function]
  111 | void hash_test2(){ // colisiones
      |      ^~~~~~~~~~
test.c:100:6: error: ‘hash_test1’ defined but not used [-Werror=unused-function]
  100 | void hash_test1(){ // posición válida
      |      ^~~~~~~~~~
cc1: all warnings being treated as errors
Compilation failed
d22c1a4
Fri 09 Sep 2022 12:42:03 PM UTC: 
 hashmap.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘insertMap’:
hashmap.c:45:31: error: ‘capacity’ undeclared (first use in this function)
   45 |     Pair array=(Pair**)calloc(capacity,sizeof(Pair*));
      |                               ^~~~~~~~
hashmap.c:45:31: note: each undeclared identifier is reported only once for each function it appears in
hashmap.c:46:11: error: incompatible types when assigning to type ‘Pair’ from type ‘Pair **’
   46 |     array=hash->buckets;
      |           ^~~~
hashmap.c:47:5: error: ‘pos’ undeclared (first use in this function); did you mean ‘pow’?
   47 |     pos=hash(key,cap){
      |     ^~~
      |     pow
hashmap.c:47:9: error: called object ‘hash’ is not a function or function pointer
   47 |     pos=hash(key,cap){
      |         ^~~~
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
hashmap.c:47:22: error: expected ‘;’ before ‘{’ token
   47 |     pos=hash(key,cap){
      |                      ^
      |                      ;
test.c: In function ‘initializeMap’:
test.c:51:17: error: ‘msg’ undeclared (first use in this function)
   51 |         sprintf(msg, "value%d",i);
      |                 ^~~
test.c:53:20: error: implicit declaration of function ‘_strdup’; did you mean ‘strdup’? [-Werror=implicit-function-declaration]
   53 |         createPair(_strdup(words[i]),_strdup(msg));
      |                    ^~~~~~~
      |                    strdup
test.c:53:20: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
   53 |         createPair(_strdup(words[i]),_strdup(msg));
      |                    ^~~~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c: In function ‘hash_test1’:
test.c:101:14: error: called object ‘hash’ is not a function or function pointer
  101 |     long pos=hash("computador",10);
      |              ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:104:9: error: called object ‘hash’ is not a function or function pointer
  104 |     pos=hash("silla",50);
      |         ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:107:9: error: called object ‘hash’ is not a function or function pointer
  107 |     pos=hash("mesa",5);
      |         ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c: In function ‘hash_test2’:
test.c:118:17: error: called object ‘hash’ is not a function or function pointer
  118 |         int p = hash(words[i],10);
      |                 ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c: In function ‘hash_test3’:
test.c:126:8: error: called object ‘hash’ is not a function or function pointer
  126 |     if(hash(_strdup("hola"),10)!=hash(_strdup("hola"),10)) printf("error: valor diferente para misma clave!\n");
      |        ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:126:34: error: called object ‘hash’ is not a function or function pointer
  126 |     if(hash(_strdup("hola"),10)!=hash(_strdup("hola"),10)) printf("error: valor diferente para misma clave!\n");
      |                                  ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:127:8: error: called object ‘hash’ is not a function or function pointer
  127 |     if(hash(_strdup("chao"),10)!=hash(_strdup("chao"),10)) printf("error: valor diferente para misma clave!\n");
      |        ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:127:34: error: called object ‘hash’ is not a function or function pointer
  127 |     if(hash(_strdup("chao"),10)!=hash(_strdup("chao"),10)) printf("error: valor diferente para misma clave!\n");
      |                                  ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:128:8: error: called object ‘hash’ is not a function or function pointer
  128 |     if(hash(_strdup("casa"),10)!=hash(_strdup("casa"),10)) printf("error: valor diferente para misma clave!\n");
      |        ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:128:34: error: called object ‘hash’ is not a function or function pointer
  128 |     if(hash(_strdup("casa"),10)!=hash(_strdup("casa"),10)) printf("error: valor diferente para misma clave!\n");
      |                                  ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c: In function ‘insert_test1’:
test.c:141:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  141 |     insertMap(map, _strdup(":key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:141:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  141 |     insertMap(map, _strdup(":key"),_strdup("value"));
      |                                    ^~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test2’:
test.c:171:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  171 |     insertMap(map, _strdup("case"),_strdup("repetido"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:171:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  171 |     insertMap(map, _strdup("case"),_strdup("repetido"));
      |                                    ^~~~~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test3’:
test.c:182:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:182:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test4’:
test.c:195:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  195 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:195:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  195 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c:205:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  205 |     insertMap(map, _strdup("holi"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:205:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  205 |     insertMap(map, _strdup("holi"),_strdup("value"));
      |                                    ^~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test5’:
test.c:222:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  222 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:222:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  222 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘search_test2’:
test.c:259:32: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  259 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                ^~~~~~~~~~~~~~
      |                                |
      |                                int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c:259:47: error: passing argument 2 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  259 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                               ^~~~~~~~~~~~~~~~
      |                                               |
      |                                               int
In file included from test.c:4:
hashmap.c:19:40: note: expected ‘void *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                                 ~~~~~~~^~~~~
test.c: In function ‘search_test3’:
test.c:280:17: error: ‘msg’ undeclared (first use in this function)
  280 |         sprintf(msg,"searchMap retorna un elemento con clave %s", map->buckets[map->current]->key);
      |                 ^~~
test.c: In function ‘erase_test2’:
test.c:317:32: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  317 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                ^~~~~~~~~~~~~~
      |                                |
      |                                int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c:317:47: error: passing argument 2 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  317 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                               ^~~~~~~~~~~~~~~~
      |                                               |
      |                                               int
In file included from test.c:4:
hashmap.c:19:40: note: expected ‘void *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                                 ~~~~~~~^~~~~
test.c: In function ‘enlarge_test’:
test.c:436:17: error: ‘msg’ undeclared (first use in this function)
  436 |         sprintf(msg,"enlarged table is:\n");
      |                 ^~~
test.c: In function ‘insertMap’:
test.c:453:5: error: ‘main’ is normally a non-static function [-Werror=main]
  453 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:511:1: error: expected declaration or statement at end of input
  511 | }
      | ^
In file included from test.c:4:
hashmap.c:45:10: error: variable ‘array’ set but not used [-Werror=unused-but-set-variable]
   45 |     Pair array=(Pair**)calloc(capacity,sizeof(Pair*));
      |          ^~~~~
At top level:
test.c:453:5: error: ‘main’ defined but not used [-Werror=unused-function]
  453 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:217:5: error: ‘insert_test5’ defined but not used [-Werror=unused-function]
  217 | int insert_test5(){ //factor de carga>0.7, se llama a función enlarge
      |     ^~~~~~~~~~~~
test.c:131:6: error: ‘compare_test’ defined but not used [-Werror=unused-function]
  131 | void compare_test(){
      |      ^~~~~~~~~~~~
test.c:125:6: error: ‘hash_test3’ defined but not used [-Werror=unused-function]
  125 | void hash_test3(){ //no random
      |      ^~~~~~~~~~
test.c:111:6: error: ‘hash_test2’ defined but not used [-Werror=unused-function]
  111 | void hash_test2(){ // colisiones
      |      ^~~~~~~~~~
test.c:100:6: error: ‘hash_test1’ defined but not used [-Werror=unused-function]
  100 | void hash_test1(){ // posición válida
      |      ^~~~~~~~~~
cc1: all warnings being treated as errors
Compilation failed
ba62d67
Fri 09 Sep 2022 12:42:34 PM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘insertMap’:
hashmap.c:45:16: error: invalid initializer
   45 |     Pair array=(Pair**)calloc(cap,sizeof(Pair*));
      |                ^
hashmap.c:46:11: error: incompatible types when assigning to type ‘Pair’ from type ‘Pair **’
   46 |     array=hash->buckets;
      |           ^~~~
hashmap.c:47:5: error: ‘pos’ undeclared (first use in this function); did you mean ‘pow’?
   47 |     pos=hash(key,cap){
      |     ^~~
      |     pow
hashmap.c:47:5: note: each undeclared identifier is reported only once for each function it appears in
hashmap.c:47:9: error: called object ‘hash’ is not a function or function pointer
   47 |     pos=hash(key,cap){
      |         ^~~~
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
hashmap.c:47:22: error: expected ‘;’ before ‘{’ token
   47 |     pos=hash(key,cap){
      |                      ^
      |                      ;
test.c: In function ‘initializeMap’:
test.c:51:17: error: ‘msg’ undeclared (first use in this function)
   51 |         sprintf(msg, "value%d",i);
      |                 ^~~
test.c:53:20: error: implicit declaration of function ‘_strdup’; did you mean ‘strdup’? [-Werror=implicit-function-declaration]
   53 |         createPair(_strdup(words[i]),_strdup(msg));
      |                    ^~~~~~~
      |                    strdup
test.c:53:20: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
   53 |         createPair(_strdup(words[i]),_strdup(msg));
      |                    ^~~~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c: In function ‘hash_test1’:
test.c:101:14: error: called object ‘hash’ is not a function or function pointer
  101 |     long pos=hash("computador",10);
      |              ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:104:9: error: called object ‘hash’ is not a function or function pointer
  104 |     pos=hash("silla",50);
      |         ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:107:9: error: called object ‘hash’ is not a function or function pointer
  107 |     pos=hash("mesa",5);
      |         ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c: In function ‘hash_test2’:
test.c:118:17: error: called object ‘hash’ is not a function or function pointer
  118 |         int p = hash(words[i],10);
      |                 ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c: In function ‘hash_test3’:
test.c:126:8: error: called object ‘hash’ is not a function or function pointer
  126 |     if(hash(_strdup("hola"),10)!=hash(_strdup("hola"),10)) printf("error: valor diferente para misma clave!\n");
      |        ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:126:34: error: called object ‘hash’ is not a function or function pointer
  126 |     if(hash(_strdup("hola"),10)!=hash(_strdup("hola"),10)) printf("error: valor diferente para misma clave!\n");
      |                                  ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:127:8: error: called object ‘hash’ is not a function or function pointer
  127 |     if(hash(_strdup("chao"),10)!=hash(_strdup("chao"),10)) printf("error: valor diferente para misma clave!\n");
      |        ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:127:34: error: called object ‘hash’ is not a function or function pointer
  127 |     if(hash(_strdup("chao"),10)!=hash(_strdup("chao"),10)) printf("error: valor diferente para misma clave!\n");
      |                                  ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:128:8: error: called object ‘hash’ is not a function or function pointer
  128 |     if(hash(_strdup("casa"),10)!=hash(_strdup("casa"),10)) printf("error: valor diferente para misma clave!\n");
      |        ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:128:34: error: called object ‘hash’ is not a function or function pointer
  128 |     if(hash(_strdup("casa"),10)!=hash(_strdup("casa"),10)) printf("error: valor diferente para misma clave!\n");
      |                                  ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c: In function ‘insert_test1’:
test.c:141:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  141 |     insertMap(map, _strdup(":key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:141:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  141 |     insertMap(map, _strdup(":key"),_strdup("value"));
      |                                    ^~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test2’:
test.c:171:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  171 |     insertMap(map, _strdup("case"),_strdup("repetido"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:171:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  171 |     insertMap(map, _strdup("case"),_strdup("repetido"));
      |                                    ^~~~~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test3’:
test.c:182:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:182:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test4’:
test.c:195:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  195 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:195:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  195 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c:205:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  205 |     insertMap(map, _strdup("holi"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:205:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  205 |     insertMap(map, _strdup("holi"),_strdup("value"));
      |                                    ^~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test5’:
test.c:222:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  222 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:222:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  222 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘search_test2’:
test.c:259:32: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  259 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                ^~~~~~~~~~~~~~
      |                                |
      |                                int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c:259:47: error: passing argument 2 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  259 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                               ^~~~~~~~~~~~~~~~
      |                                               |
      |                                               int
In file included from test.c:4:
hashmap.c:19:40: note: expected ‘void *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                                 ~~~~~~~^~~~~
test.c: In function ‘search_test3’:
test.c:280:17: error: ‘msg’ undeclared (first use in this function)
  280 |         sprintf(msg,"searchMap retorna un elemento con clave %s", map->buckets[map->current]->key);
      |                 ^~~
test.c: In function ‘erase_test2’:
test.c:317:32: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  317 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                ^~~~~~~~~~~~~~
      |                                |
      |                                int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c:317:47: error: passing argument 2 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  317 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                               ^~~~~~~~~~~~~~~~
      |                                               |
      |                                               int
In file included from test.c:4:
hashmap.c:19:40: note: expected ‘void *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                                 ~~~~~~~^~~~~
test.c: In function ‘enlarge_test’:
test.c:436:17: error: ‘msg’ undeclared (first use in this function)
  436 |         sprintf(msg,"enlarged table is:\n");
      |                 ^~~
test.c: In function ‘insertMap’:
test.c:453:5: error: ‘main’ is normally a non-static function [-Werror=main]
  453 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:511:1: error: expected declaration or statement at end of input
  511 | }
      | ^
In file included from test.c:4:
hashmap.c:45:10: error: variable ‘array’ set but not used [-Werror=unused-but-set-variable]
   45 |     Pair array=(Pair**)calloc(cap,sizeof(Pair*));
      |          ^~~~~
At top level:
test.c:453:5: error: ‘main’ defined but not used [-Werror=unused-function]
  453 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:217:5: error: ‘insert_test5’ defined but not used [-Werror=unused-function]
  217 | int insert_test5(){ //factor de carga>0.7, se llama a función enlarge
      |     ^~~~~~~~~~~~
test.c:131:6: error: ‘compare_test’ defined but not used [-Werror=unused-function]
  131 | void compare_test(){
      |      ^~~~~~~~~~~~
test.c:125:6: error: ‘hash_test3’ defined but not used [-Werror=unused-function]
  125 | void hash_test3(){ //no random
      |      ^~~~~~~~~~
test.c:111:6: error: ‘hash_test2’ defined but not used [-Werror=unused-function]
  111 | void hash_test2(){ // colisiones
      |      ^~~~~~~~~~
test.c:100:6: error: ‘hash_test1’ defined but not used [-Werror=unused-function]
  100 | void hash_test1(){ // posición válida
      |      ^~~~~~~~~~
cc1: all warnings being treated as errors
Compilation failed
146d4c6
Fri 09 Sep 2022 12:42:53 PM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘insertMap’:
hashmap.c:45:17: error: initialization of ‘Pair *’ from incompatible pointer type ‘Pair **’ [-Werror=incompatible-pointer-types]
   45 |     Pair *array=(Pair**)calloc(cap,sizeof(Pair*));
      |                 ^
hashmap.c:46:10: error: assignment to ‘Pair *’ from incompatible pointer type ‘Pair **’ [-Werror=incompatible-pointer-types]
   46 |     array=hash->buckets;
      |          ^
hashmap.c:47:5: error: ‘pos’ undeclared (first use in this function); did you mean ‘pow’?
   47 |     pos=hash(key,cap){
      |     ^~~
      |     pow
hashmap.c:47:5: note: each undeclared identifier is reported only once for each function it appears in
hashmap.c:47:9: error: called object ‘hash’ is not a function or function pointer
   47 |     pos=hash(key,cap){
      |         ^~~~
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
hashmap.c:47:22: error: expected ‘;’ before ‘{’ token
   47 |     pos=hash(key,cap){
      |                      ^
      |                      ;
test.c: In function ‘initializeMap’:
test.c:51:17: error: ‘msg’ undeclared (first use in this function)
   51 |         sprintf(msg, "value%d",i);
      |                 ^~~
test.c:53:20: error: implicit declaration of function ‘_strdup’; did you mean ‘strdup’? [-Werror=implicit-function-declaration]
   53 |         createPair(_strdup(words[i]),_strdup(msg));
      |                    ^~~~~~~
      |                    strdup
test.c:53:20: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
   53 |         createPair(_strdup(words[i]),_strdup(msg));
      |                    ^~~~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c: In function ‘hash_test1’:
test.c:101:14: error: called object ‘hash’ is not a function or function pointer
  101 |     long pos=hash("computador",10);
      |              ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:104:9: error: called object ‘hash’ is not a function or function pointer
  104 |     pos=hash("silla",50);
      |         ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:107:9: error: called object ‘hash’ is not a function or function pointer
  107 |     pos=hash("mesa",5);
      |         ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c: In function ‘hash_test2’:
test.c:118:17: error: called object ‘hash’ is not a function or function pointer
  118 |         int p = hash(words[i],10);
      |                 ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c: In function ‘hash_test3’:
test.c:126:8: error: called object ‘hash’ is not a function or function pointer
  126 |     if(hash(_strdup("hola"),10)!=hash(_strdup("hola"),10)) printf("error: valor diferente para misma clave!\n");
      |        ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:126:34: error: called object ‘hash’ is not a function or function pointer
  126 |     if(hash(_strdup("hola"),10)!=hash(_strdup("hola"),10)) printf("error: valor diferente para misma clave!\n");
      |                                  ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:127:8: error: called object ‘hash’ is not a function or function pointer
  127 |     if(hash(_strdup("chao"),10)!=hash(_strdup("chao"),10)) printf("error: valor diferente para misma clave!\n");
      |        ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:127:34: error: called object ‘hash’ is not a function or function pointer
  127 |     if(hash(_strdup("chao"),10)!=hash(_strdup("chao"),10)) printf("error: valor diferente para misma clave!\n");
      |                                  ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:128:8: error: called object ‘hash’ is not a function or function pointer
  128 |     if(hash(_strdup("casa"),10)!=hash(_strdup("casa"),10)) printf("error: valor diferente para misma clave!\n");
      |        ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:128:34: error: called object ‘hash’ is not a function or function pointer
  128 |     if(hash(_strdup("casa"),10)!=hash(_strdup("casa"),10)) printf("error: valor diferente para misma clave!\n");
      |                                  ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c: In function ‘insert_test1’:
test.c:141:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  141 |     insertMap(map, _strdup(":key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:141:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  141 |     insertMap(map, _strdup(":key"),_strdup("value"));
      |                                    ^~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test2’:
test.c:171:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  171 |     insertMap(map, _strdup("case"),_strdup("repetido"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:171:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  171 |     insertMap(map, _strdup("case"),_strdup("repetido"));
      |                                    ^~~~~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test3’:
test.c:182:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:182:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test4’:
test.c:195:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  195 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:195:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  195 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c:205:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  205 |     insertMap(map, _strdup("holi"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:205:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  205 |     insertMap(map, _strdup("holi"),_strdup("value"));
      |                                    ^~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test5’:
test.c:222:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  222 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:222:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  222 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘search_test2’:
test.c:259:32: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  259 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                ^~~~~~~~~~~~~~
      |                                |
      |                                int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c:259:47: error: passing argument 2 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  259 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                               ^~~~~~~~~~~~~~~~
      |                                               |
      |                                               int
In file included from test.c:4:
hashmap.c:19:40: note: expected ‘void *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                                 ~~~~~~~^~~~~
test.c: In function ‘search_test3’:
test.c:280:17: error: ‘msg’ undeclared (first use in this function)
  280 |         sprintf(msg,"searchMap retorna un elemento con clave %s", map->buckets[map->current]->key);
      |                 ^~~
test.c: In function ‘erase_test2’:
test.c:317:32: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  317 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                ^~~~~~~~~~~~~~
      |                                |
      |                                int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c:317:47: error: passing argument 2 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  317 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                               ^~~~~~~~~~~~~~~~
      |                                               |
      |                                               int
In file included from test.c:4:
hashmap.c:19:40: note: expected ‘void *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                                 ~~~~~~~^~~~~
test.c: In function ‘enlarge_test’:
test.c:436:17: error: ‘msg’ undeclared (first use in this function)
  436 |         sprintf(msg,"enlarged table is:\n");
      |                 ^~~
test.c: In function ‘insertMap’:
test.c:453:5: error: ‘main’ is normally a non-static function [-Werror=main]
  453 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:511:1: error: expected declaration or statement at end of input
  511 | }
      | ^
In file included from test.c:4:
hashmap.c:45:11: error: variable ‘array’ set but not used [-Werror=unused-but-set-variable]
   45 |     Pair *array=(Pair**)calloc(cap,sizeof(Pair*));
      |           ^~~~~
At top level:
test.c:453:5: error: ‘main’ defined but not used [-Werror=unused-function]
  453 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:217:5: error: ‘insert_test5’ defined but not used [-Werror=unused-function]
  217 | int insert_test5(){ //factor de carga>0.7, se llama a función enlarge
      |     ^~~~~~~~~~~~
test.c:131:6: error: ‘compare_test’ defined but not used [-Werror=unused-function]
  131 | void compare_test(){
      |      ^~~~~~~~~~~~
test.c:125:6: error: ‘hash_test3’ defined but not used [-Werror=unused-function]
  125 | void hash_test3(){ //no random
      |      ^~~~~~~~~~
test.c:111:6: error: ‘hash_test2’ defined but not used [-Werror=unused-function]
  111 | void hash_test2(){ // colisiones
      |      ^~~~~~~~~~
test.c:100:6: error: ‘hash_test1’ defined but not used [-Werror=unused-function]
  100 | void hash_test1(){ // posición válida
      |      ^~~~~~~~~~
cc1: all warnings being treated as errors
Compilation failed
1aceced
Fri 09 Sep 2022 12:43:03 PM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘insertMap’:
hashmap.c:47:5: error: ‘pos’ undeclared (first use in this function); did you mean ‘pow’?
   47 |     pos=hash(key,cap){
      |     ^~~
      |     pow
hashmap.c:47:5: note: each undeclared identifier is reported only once for each function it appears in
hashmap.c:47:9: error: called object ‘hash’ is not a function or function pointer
   47 |     pos=hash(key,cap){
      |         ^~~~
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
hashmap.c:47:22: error: expected ‘;’ before ‘{’ token
   47 |     pos=hash(key,cap){
      |                      ^
      |                      ;
test.c: In function ‘initializeMap’:
test.c:51:17: error: ‘msg’ undeclared (first use in this function)
   51 |         sprintf(msg, "value%d",i);
      |                 ^~~
test.c:53:20: error: implicit declaration of function ‘_strdup’; did you mean ‘strdup’? [-Werror=implicit-function-declaration]
   53 |         createPair(_strdup(words[i]),_strdup(msg));
      |                    ^~~~~~~
      |                    strdup
test.c:53:20: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
   53 |         createPair(_strdup(words[i]),_strdup(msg));
      |                    ^~~~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c: In function ‘hash_test1’:
test.c:101:14: error: called object ‘hash’ is not a function or function pointer
  101 |     long pos=hash("computador",10);
      |              ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:104:9: error: called object ‘hash’ is not a function or function pointer
  104 |     pos=hash("silla",50);
      |         ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:107:9: error: called object ‘hash’ is not a function or function pointer
  107 |     pos=hash("mesa",5);
      |         ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c: In function ‘hash_test2’:
test.c:118:17: error: called object ‘hash’ is not a function or function pointer
  118 |         int p = hash(words[i],10);
      |                 ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c: In function ‘hash_test3’:
test.c:126:8: error: called object ‘hash’ is not a function or function pointer
  126 |     if(hash(_strdup("hola"),10)!=hash(_strdup("hola"),10)) printf("error: valor diferente para misma clave!\n");
      |        ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:126:34: error: called object ‘hash’ is not a function or function pointer
  126 |     if(hash(_strdup("hola"),10)!=hash(_strdup("hola"),10)) printf("error: valor diferente para misma clave!\n");
      |                                  ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:127:8: error: called object ‘hash’ is not a function or function pointer
  127 |     if(hash(_strdup("chao"),10)!=hash(_strdup("chao"),10)) printf("error: valor diferente para misma clave!\n");
      |        ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:127:34: error: called object ‘hash’ is not a function or function pointer
  127 |     if(hash(_strdup("chao"),10)!=hash(_strdup("chao"),10)) printf("error: valor diferente para misma clave!\n");
      |                                  ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:128:8: error: called object ‘hash’ is not a function or function pointer
  128 |     if(hash(_strdup("casa"),10)!=hash(_strdup("casa"),10)) printf("error: valor diferente para misma clave!\n");
      |        ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:128:34: error: called object ‘hash’ is not a function or function pointer
  128 |     if(hash(_strdup("casa"),10)!=hash(_strdup("casa"),10)) printf("error: valor diferente para misma clave!\n");
      |                                  ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c: In function ‘insert_test1’:
test.c:141:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  141 |     insertMap(map, _strdup(":key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:141:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  141 |     insertMap(map, _strdup(":key"),_strdup("value"));
      |                                    ^~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test2’:
test.c:171:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  171 |     insertMap(map, _strdup("case"),_strdup("repetido"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:171:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  171 |     insertMap(map, _strdup("case"),_strdup("repetido"));
      |                                    ^~~~~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test3’:
test.c:182:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:182:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  182 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test4’:
test.c:195:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  195 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:195:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  195 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c:205:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  205 |     insertMap(map, _strdup("holi"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:205:36: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  205 |     insertMap(map, _strdup("holi"),_strdup("value"));
      |                                    ^~~~~~~~~~~~~~~~
      |                                    |
      |                                    int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘insert_test5’:
test.c:222:20: error: passing argument 2 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  222 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                    ^~~~~~~~~~~~~~
      |                    |
      |                    int
In file included from test.c:4:
hashmap.c:42:38: note: expected ‘char *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                               ~~~~~~~^~~
test.c:222:35: error: passing argument 3 of ‘insertMap’ makes pointer from integer without a cast [-Werror=int-conversion]
  222 |     insertMap(map, _strdup("key"),_strdup("value"));
      |                                   ^~~~~~~~~~~~~~~~
      |                                   |
      |                                   int
In file included from test.c:4:
hashmap.c:42:50: note: expected ‘void *’ but argument is of type ‘int’
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                                           ~~~~~~~^~~~~
test.c: In function ‘search_test2’:
test.c:259:32: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  259 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                ^~~~~~~~~~~~~~
      |                                |
      |                                int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c:259:47: error: passing argument 2 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  259 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                               ^~~~~~~~~~~~~~~~
      |                                               |
      |                                               int
In file included from test.c:4:
hashmap.c:19:40: note: expected ‘void *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                                 ~~~~~~~^~~~~
test.c: In function ‘search_test3’:
test.c:280:17: error: ‘msg’ undeclared (first use in this function)
  280 |         sprintf(msg,"searchMap retorna un elemento con clave %s", map->buckets[map->current]->key);
      |                 ^~~
test.c: In function ‘erase_test2’:
test.c:317:32: error: passing argument 1 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  317 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                ^~~~~~~~~~~~~~
      |                                |
      |                                int
In file included from test.c:4:
hashmap.c:19:27: note: expected ‘char *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                    ~~~~~~~^~~
test.c:317:47: error: passing argument 2 of ‘createPair’ makes pointer from integer without a cast [-Werror=int-conversion]
  317 |     map->buckets[9]=createPair(_strdup("key"),_strdup("value"));
      |                                               ^~~~~~~~~~~~~~~~
      |                                               |
      |                                               int
In file included from test.c:4:
hashmap.c:19:40: note: expected ‘void *’ but argument is of type ‘int’
   19 | Pair * createPair( char * key,  void * value) {
      |                                 ~~~~~~~^~~~~
test.c: In function ‘enlarge_test’:
test.c:436:17: error: ‘msg’ undeclared (first use in this function)
  436 |         sprintf(msg,"enlarged table is:\n");
      |                 ^~~
test.c: In function ‘insertMap’:
test.c:453:5: error: ‘main’ is normally a non-static function [-Werror=main]
  453 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:511:1: error: expected declaration or statement at end of input
  511 | }
      | ^
In file included from test.c:4:
hashmap.c:45:12: error: variable ‘array’ set but not used [-Werror=unused-but-set-variable]
   45 |     Pair **array=(Pair**)calloc(cap,sizeof(Pair*));
      |            ^~~~~
At top level:
test.c:453:5: error: ‘main’ defined but not used [-Werror=unused-function]
  453 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:217:5: error: ‘insert_test5’ defined but not used [-Werror=unused-function]
  217 | int insert_test5(){ //factor de carga>0.7, se llama a función enlarge
      |     ^~~~~~~~~~~~
test.c:131:6: error: ‘compare_test’ defined but not used [-Werror=unused-function]
  131 | void compare_test(){
      |      ^~~~~~~~~~~~
test.c:125:6: error: ‘hash_test3’ defined but not used [-Werror=unused-function]
  125 | void hash_test3(){ //no random
      |      ^~~~~~~~~~
test.c:111:6: error: ‘hash_test2’ defined but not used [-Werror=unused-function]
  111 | void hash_test2(){ // colisiones
      |      ^~~~~~~~~~
test.c:100:6: error: ‘hash_test1’ defined but not used [-Werror=unused-function]
  100 | void hash_test1(){ // posición válida
      |      ^~~~~~~~~~
cc1: all warnings being treated as errors
Compilation failed
4a10f27
Fri 09 Sep 2022 12:43:26 PM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘insertMap’:
hashmap.c:47:14: error: called object ‘hash’ is not a function or function pointer
   47 |     long pos=hash(key,cap){
      |              ^~~~
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
hashmap.c:47:27: error: expected ‘,’ or ‘;’ before ‘{’ token
   47 |     long pos=hash(key,cap){
      |                           ^
test.c: In function ‘hash_test1’:
test.c:101:14: error: called object ‘hash’ is not a function or function pointer
  101 |     long pos=hash("computador",10);
      |              ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:104:9: error: called object ‘hash’ is not a function or function pointer
  104 |     pos=hash("silla",50);
      |         ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:107:9: error: called object ‘hash’ is not a function or function pointer
  107 |     pos=hash("mesa",5);
      |         ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c: In function ‘hash_test2’:
test.c:118:17: error: called object ‘hash’ is not a function or function pointer
  118 |         int p = hash(words[i],10);
      |                 ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c: In function ‘hash_test3’:
test.c:126:8: error: called object ‘hash’ is not a function or function pointer
  126 |     if(hash(_strdup("hola"),10)!=hash(_strdup("hola"),10)) printf("error: valor diferente para misma clave!\n");
      |        ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:126:34: error: called object ‘hash’ is not a function or function pointer
  126 |     if(hash(_strdup("hola"),10)!=hash(_strdup("hola"),10)) printf("error: valor diferente para misma clave!\n");
      |                                  ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:127:8: error: called object ‘hash’ is not a function or function pointer
  127 |     if(hash(_strdup("chao"),10)!=hash(_strdup("chao"),10)) printf("error: valor diferente para misma clave!\n");
      |        ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:127:34: error: called object ‘hash’ is not a function or function pointer
  127 |     if(hash(_strdup("chao"),10)!=hash(_strdup("chao"),10)) printf("error: valor diferente para misma clave!\n");
      |                                  ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:128:8: error: called object ‘hash’ is not a function or function pointer
  128 |     if(hash(_strdup("casa"),10)!=hash(_strdup("casa"),10)) printf("error: valor diferente para misma clave!\n");
      |        ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c:128:34: error: called object ‘hash’ is not a function or function pointer
  128 |     if(hash(_strdup("casa"),10)!=hash(_strdup("casa"),10)) printf("error: valor diferente para misma clave!\n");
      |                                  ^~~~
In file included from test.c:4:
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
test.c: In function ‘insertMap’:
test.c:453:5: error: ‘main’ is normally a non-static function [-Werror=main]
  453 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:511:1: error: expected declaration or statement at end of input
  511 | }
      | ^
In file included from test.c:4:
hashmap.c:47:10: error: unused variable ‘pos’ [-Werror=unused-variable]
   47 |     long pos=hash(key,cap){
      |          ^~~
hashmap.c:45:12: error: variable ‘array’ set but not used [-Werror=unused-but-set-variable]
   45 |     Pair **array=(Pair**)calloc(cap,sizeof(Pair*));
      |            ^~~~~
At top level:
test.c:453:5: error: ‘main’ defined but not used [-Werror=unused-function]
  453 | int main( int argc, char *argv[] ) {
      |     ^~~~
test.c:217:5: error: ‘insert_test5’ defined but not used [-Werror=unused-function]
  217 | int insert_test5(){ //factor de carga>0.7, se llama a función enlarge
      |     ^~~~~~~~~~~~
test.c:131:6: error: ‘compare_test’ defined but not used [-Werror=unused-function]
  131 | void compare_test(){
      |      ^~~~~~~~~~~~
test.c:125:6: error: ‘hash_test3’ defined but not used [-Werror=unused-function]
  125 | void hash_test3(){ //no random
      |      ^~~~~~~~~~
test.c:111:6: error: ‘hash_test2’ defined but not used [-Werror=unused-function]
  111 | void hash_test2(){ // colisiones
      |      ^~~~~~~~~~
test.c:100:6: error: ‘hash_test1’ defined but not used [-Werror=unused-function]
  100 | void hash_test1(){ // posición válida
      |      ^~~~~~~~~~
cc1: all warnings being treated as errors
Compilation failed
8ff31ee
Fri 09 Sep 2022 12:43:40 PM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘insertMap’:
hashmap.c:47:14: error: called object ‘hash’ is not a function or function pointer
   47 |     long pos=hash(key,cap)
      |              ^~~~
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
hashmap.c:48:5: error: expected ‘,’ or ‘;’ before ‘if’
   48 |     if (array[pos]!=NULL){
      |     ^~
hashmap.c:47:10: error: unused variable ‘pos’ [-Werror=unused-variable]
   47 |     long pos=hash(key,cap)
      |          ^~~
hashmap.c:45:12: error: variable ‘array’ set but not used [-Werror=unused-but-set-variable]
   45 |     Pair **array=(Pair**)calloc(cap,sizeof(Pair*));
      |            ^~~~~
cc1: all warnings being treated as errors
Compilation failed
86b6a48
Fri 09 Sep 2022 12:44:13 PM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘insertMap’:
hashmap.c:47:15: error: called object ‘hash’ is not a function or function pointer
   47 |     long *pos=hash(key,cap)
      |               ^~~~
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
hashmap.c:48:5: error: expected ‘,’ or ‘;’ before ‘if’
   48 |     if (array[pos]!=NULL){
      |     ^~
hashmap.c:47:11: error: unused variable ‘pos’ [-Werror=unused-variable]
   47 |     long *pos=hash(key,cap)
      |           ^~~
hashmap.c:45:12: error: variable ‘array’ set but not used [-Werror=unused-but-set-variable]
   45 |     Pair **array=(Pair**)calloc(cap,sizeof(Pair*));
      |            ^~~~~
cc1: all warnings being treated as errors
Compilation failed
35785d5
Fri 09 Sep 2022 12:44:22 PM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘insertMap’:
hashmap.c:47:14: error: called object ‘hash’ is not a function or function pointer
   47 |     long pos=hash(key,cap);
      |              ^~~~
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
hashmap.c:49:24: error: ‘capacity’ undeclared (first use in this function)
   49 |       for (int pos;pos<capacity;pos++){
      |                        ^~~~~~~~
hashmap.c:49:24: note: each undeclared identifier is reported only once for each function it appears in
hashmap.c:51:21: error: assignment to ‘Pair *’ from incompatible pointer type ‘HashMap *’ {aka ‘struct HashMap *’} [-Werror=incompatible-pointer-types]
   51 |           array[pos]=map;
      |                     ^
cc1: all warnings being treated as errors
Compilation failed
d296ba1
Fri 09 Sep 2022 12:44:46 PM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘insertMap’:
hashmap.c:46:10: error: conflicting types for ‘array’
   46 |     long array=hash->buckets;
      |          ^~~~~
hashmap.c:45:12: note: previous definition of ‘array’ was here
   45 |     Pair **array=(Pair**)calloc(cap,sizeof(Pair*));
      |            ^~~~~
hashmap.c:46:16: error: initialization of ‘long int’ from ‘Pair **’ makes integer from pointer without a cast [-Werror=int-conversion]
   46 |     long array=hash->buckets;
      |                ^~~~
hashmap.c:47:14: error: called object ‘hash’ is not a function or function pointer
   47 |     long pos=hash(key,cap);
      |              ^~~~
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
hashmap.c:48:14: error: subscripted value is neither array nor pointer nor vector
   48 |     if (array[pos]!=NULL){
      |              ^
hashmap.c:49:24: error: ‘capacity’ undeclared (first use in this function)
   49 |       for (int pos;pos<capacity;pos++){
      |                        ^~~~~~~~
hashmap.c:49:24: note: each undeclared identifier is reported only once for each function it appears in
hashmap.c:50:18: error: subscripted value is neither array nor pointer nor vector
   50 |         if (array[pos]==NULL)
      |                  ^
hashmap.c:51:16: error: subscripted value is neither array nor pointer nor vector
   51 |           array[pos]=map;
      |                ^
hashmap.c:47:10: error: variable ‘pos’ set but not used [-Werror=unused-but-set-variable]
   47 |     long pos=hash(key,cap);
      |          ^~~
hashmap.c:46:10: error: variable ‘array’ set but not used [-Werror=unused-but-set-variable]
   46 |     long array=hash->buckets;
      |          ^~~~~
cc1: all warnings being treated as errors
Compilation failed
365a850
Fri 09 Sep 2022 12:44:52 PM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘insertMap’:
hashmap.c:47:14: error: called object ‘hash’ is not a function or function pointer
   47 |     long pos=hash(key,cap);
      |              ^~~~
hashmap.c:43:14: note: declared here
   43 |     HashMap *hash=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~~
hashmap.c:49:24: error: ‘capacity’ undeclared (first use in this function)
   49 |       for (int pos;pos<capacity;pos++){
      |                        ^~~~~~~~
hashmap.c:49:24: note: each undeclared identifier is reported only once for each function it appears in
hashmap.c:51:21: error: assignment to ‘Pair *’ from incompatible pointer type ‘HashMap *’ {aka ‘struct HashMap *’} [-Werror=incompatible-pointer-types]
   51 |           array[pos]=map;
      |                     ^
cc1: all warnings being treated as errors
Compilation failed
7b5cccf
Fri 09 Sep 2022 12:46:05 PM UTC: 
 hashmap.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
In file included from test.c:4:
hashmap.c: In function ‘insertMap’:
hashmap.c:43:14: error: ‘map’ redeclared as different kind of symbol
   43 |     HashMap *map=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~
hashmap.c:42:26: note: previous definition of ‘map’ was here
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                ~~~~~~~~~~^~~
hashmap.c:44:18: error: request for member ‘capacity’ in something not a structure or union
   44 |     long cap=hash->capacity;
      |                  ^~
hashmap.c:46:15: error: request for member ‘buckets’ in something not a structure or union
   46 |     array=hash->buckets;
      |               ^~
hashmap.c:49:24: error: ‘capacity’ undeclared (first use in this function)
   49 |       for (int pos;pos<capacity;pos++){
      |                        ^~~~~~~~
hashmap.c:49:24: note: each undeclared identifier is reported only once for each function it appears in
hashmap.c:54:9: error: request for member ‘capacity’ in something not a structure or union
   54 |     hash->capacity++;
      |         ^~
hashmap.c:43:14: error: unused variable ‘map’ [-Werror=unused-variable]
   43 |     HashMap *map=(HashMap*)malloc(sizeof(HashMap));
      |              ^~~
cc1: all warnings being treated as errors
Compilation failed
79a59dd
Fri 09 Sep 2022 12:46:18 PM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘insertMap’:
hashmap.c:43:13: error: ‘map’ redeclared as different kind of symbol
   43 |     HashMap map=(HashMap*)malloc(sizeof(HashMap));
      |             ^~~
hashmap.c:42:26: note: previous definition of ‘map’ was here
   42 | void insertMap(HashMap * map, char * key, void * value) {
      |                ~~~~~~~~~~^~~
hashmap.c:43:17: error: invalid initializer
   43 |     HashMap map=(HashMap*)malloc(sizeof(HashMap));
      |                 ^
hashmap.c:44:18: error: request for member ‘capacity’ in something not a structure or union
   44 |     long cap=hash->capacity;
      |                  ^~
hashmap.c:46:15: error: request for member ‘buckets’ in something not a structure or union
   46 |     array=hash->buckets;
      |               ^~
hashmap.c:49:24: error: ‘capacity’ undeclared (first use in this function)
   49 |       for (int pos;pos<capacity;pos++){
      |                        ^~~~~~~~
hashmap.c:49:24: note: each undeclared identifier is reported only once for each function it appears in
hashmap.c:54:9: error: request for member ‘capacity’ in something not a structure or union
   54 |     hash->capacity++;
      |         ^~
hashmap.c:43:13: error: unused variable ‘map’ [-Werror=unused-variable]
   43 |     HashMap map=(HashMap*)malloc(sizeof(HashMap));
      |             ^~~
cc1: all warnings being treated as errors
Compilation failed
a3299e6
Fri 09 Sep 2022 12:46:27 PM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘insertMap’:
hashmap.c:44:18: error: request for member ‘capacity’ in something not a structure or union
   44 |     long cap=hash->capacity;
      |                  ^~
hashmap.c:46:15: error: request for member ‘buckets’ in something not a structure or union
   46 |     array=hash->buckets;
      |               ^~
hashmap.c:49:24: error: ‘capacity’ undeclared (first use in this function)
   49 |       for (int pos;pos<capacity;pos++){
      |                        ^~~~~~~~
hashmap.c:49:24: note: each undeclared identifier is reported only once for each function it appears in
hashmap.c:54:9: error: request for member ‘capacity’ in something not a structure or union
   54 |     hash->capacity++;
      |         ^~
Compilation failed
224b0ed
Fri 09 Sep 2022 12:46:46 PM UTC: 
 hashmap.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)
In file included from test.c:4:
hashmap.c: In function ‘insertMap’:
hashmap.c:49:24: error: ‘capacity’ undeclared (first use in this function)
   49 |       for (int pos;pos<capacity;pos++){
      |                        ^~~~~~~~
hashmap.c:49:24: note: each undeclared identifier is reported only once for each function it appears in
hashmap.c:54:9: error: request for member ‘capacity’ in something not a structure or union
   54 |     hash->capacity++;
      |         ^~
Compilation failed
5c3d34c
Fri 09 Sep 2022 12:47:03 PM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘insertMap’:
hashmap.c:54:9: error: request for member ‘capacity’ in something not a structure or union
   54 |     hash->capacity++;
      |         ^~
Compilation failed
efef7d1
Fri 09 Sep 2022 12:47:31 PM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘insertMap’:
hashmap.c:49:23: error: ‘pos’ may be used uninitialized in this function [-Werror=maybe-uninitialized]
   49 |       for (int pos;pos<cap;pos++){
      |                    ~~~^~~~
cc1: all warnings being treated as errors
Compilation failed
9848595
Fri 09 Sep 2022 12:49:08 PM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘insertMap’:
hashmap.c:49:7: error: statement with no effect [-Werror=unused-value]
   49 |       for (pos;pos<cap;pos++){
      |       ^~~
cc1: all warnings being treated as errors
Compilation failed
7f7ca64
Fri 09 Sep 2022 12:50:28 PM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  0|0
1dc8fbf
Fri 09 Sep 2022 12:53:15 PM UTC: 
 hashmap.c | 1 +
 1 file changed, 1 insertion(+)
In file included from test.c:4:
hashmap.c: In function ‘insertMap’:
hashmap.c:46:5: error: expected ‘,’ or ‘;’ before ‘Pair’
   46 |     Pair **array=(Pair**)calloc(cap,sizeof(Pair*));
      |     ^~~~
hashmap.c:47:5: error: ‘array’ undeclared (first use in this function)
   47 |     array=map->buckets;
      |     ^~~~~
hashmap.c:47:5: note: each undeclared identifier is reported only once for each function it appears in
hashmap.c:45:10: error: unused variable ‘tam’ [-Werror=unused-variable]
   45 |     long tam=map->size
      |          ^~~
cc1: all warnings being treated as errors
Compilation failed
ac1d561
Fri 09 Sep 2022 12:53:22 PM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘insertMap’:
hashmap.c:46:5: error: expected ‘,’ or ‘;’ before ‘Pair’
   46 |     Pair **array=(Pair**)calloc(cap,sizeof(Pair*));
      |     ^~~~
hashmap.c:47:5: error: ‘array’ undeclared (first use in this function)
   47 |     array=map->buckets;
      |     ^~~~~
hashmap.c:47:5: note: each undeclared identifier is reported only once for each function it appears in
Compilation failed
893d776
Fri 09 Sep 2022 12:53:28 PM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  0|0
6c20cf2
Fri 09 Sep 2022 12:57:19 PM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  0|0
6a091d6
Fri 09 Sep 2022 12:59:07 PM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘insertMap’:
hashmap.c:44:33: error: ‘cap’ undeclared (first use in this function); did you mean ‘map’?
   44 |     Pair **array=(Pair**)malloc(cap,sizeof(Pair*));
      |                                 ^~~
      |                                 map
hashmap.c:44:33: note: each undeclared identifier is reported only once for each function it appears in
hashmap.c:44:26: error: too many arguments to function ‘malloc’
   44 |     Pair **array=(Pair**)malloc(cap,sizeof(Pair*));
      |                          ^~~~~~
In file included from test.c:2:
/nix/store/iwd8ic5hhwdxn5dga0im55g5hjl270cd-glibc-2.33-47-dev/include/stdlib.h:539:14: note: declared here
  539 | extern void *malloc (size_t __size) __THROW __attribute_malloc__
      |              ^~~~~~
Compilation failed
e857dfd
Fri 09 Sep 2022 12:59:12 PM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘insertMap’:
hashmap.c:44:33: error: ‘cap’ undeclared (first use in this function); did you mean ‘map’?
   44 |     Pair **array=(Pair**)calloc(cap,sizeof(Pair*));
      |                                 ^~~
      |                                 map
hashmap.c:44:33: note: each undeclared identifier is reported only once for each function it appears in
Compilation failed
e25273f
Fri 09 Sep 2022 12:59:48 PM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
 tests:  0|0
c20ee22
Fri 09 Sep 2022 01:08:52 PM UTC: 
 hashmap.c | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)
 tests:  0|0
730fbf8
Fri 09 Sep 2022 01:13:03 PM UTC: 
 hashmap.c | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘insertMap’:
hashmap.c:52:9: error: this ‘if’ clause does not guard... [-Werror=misleading-indentation]
   52 |         if (array[pos]==NULL)
      |         ^~
hashmap.c:54:13: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘if’
   54 |             break;
      |             ^~~~~
hashmap.c:58:5: error: this ‘else’ clause does not guard... [-Werror=misleading-indentation]
   58 |     else
      |     ^~~~
hashmap.c:60:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘else’
   60 |       map->current=pos;
      |       ^~~
cc1: all warnings being treated as errors
Compilation failed
1408af4
Fri 09 Sep 2022 01:13:31 PM UTC: 
 hashmap.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘insertMap’:
hashmap.c:59:5: error: this ‘else’ clause does not guard... [-Werror=misleading-indentation]
   59 |     else
      |     ^~~~
hashmap.c:61:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘else’
   61 |       map->current=pos;
      |       ^~~
cc1: all warnings being treated as errors
Compilation failed
1996445
Fri 09 Sep 2022 01:13:46 PM UTC: 
 hashmap.c | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
In file included from test.c:4:
hashmap.c: In function ‘insertMap’:
hashmap.c:59:5: error: this ‘else’ clause does not guard... [-Werror=misleading-indentation]
   59 |     else
      |     ^~~~
hashmap.c:61:7: note: ...this statement, but the latter is misleadingly indented as if it were guarded by the ‘else’
   61 |       map->current=pos;
      |       ^~~
cc1: all warnings being treated as errors
Compilation failed
f28a946
Fri 09 Sep 2022 01:13:58 PM UTC: 
 hashmap.c | 3 ++-
 1 file changed, 2 insertions(+), 1 deletion(-)
 tests:  0|0
ff2634a
Fri 09 Sep 2022 01:14:29 PM UTC: 
 hashmap.c | 1 +
 1 file changed, 1 insertion(+)
 tests:  0|0
cdd5e71
Fri 09 Sep 2022 01:16:50 PM UTC: 
 hashmap.c | 2 ++
 1 file changed, 2 insertions(+)
 tests:  0|0
04105e5
Fri 09 Sep 2022 01:19:56 PM UTC: 
 hashmap.c | 21 ++++++++-------------
 1 file changed, 8 insertions(+), 13 deletions(-)
In file included from test.c:4:
hashmap.c: In function ‘insertMap’:
hashmap.c:44:23: error: ‘cap’ undeclared (first use in this function); did you mean ‘map’?
   44 |     long pos=hash(key,cap);
      |                       ^~~
      |                       map
hashmap.c:44:23: note: each undeclared identifier is reported only once for each function it appears in
hashmap.c:45:14: error: ‘HashMap’ {aka ‘struct HashMap’} has no member named ‘bcukets’; did you mean ‘buckets’?
   45 |     if (map->bcukets[pos]!=NULL){
      |              ^~~~~~~
      |              buckets
Compilation failed
904ab06
